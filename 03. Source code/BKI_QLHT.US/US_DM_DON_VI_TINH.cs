///************************************************
/// Generated by: DungNT
/// Date: 31/03/2014 02:39:33
/// Goal: Create User Service Class for DM_DON_VI_TINH
///************************************************
/// <summary>
/// Create User Service Class for DM_DON_VI_TINH
/// </summary>

using System;
using BKI_QLHT.DS;
using IP.Core.IPCommon;
using IP.Core.IPUserService;
using System.Data.SqlClient;
using System.Data;



namespace BKI_QLHT.US{

public class US_DM_DON_VI_TINH : US_Object
{
	private const string c_TableName = "DM_DON_VI_TINH";
    #region "Public Properties"
    public decimal dcID
    {
        get
        {
            return CNull.RowNVLDecimal(pm_objDR, "ID", IPConstants.c_DefaultDecimal);
        }
        set
        {
            pm_objDR["ID"] = value;
        }
    }

    public bool IsIDNull()
    {
        return pm_objDR.IsNull("ID");
    }

    public void SetIDNull()
    {
        pm_objDR["ID"] = System.Convert.DBNull;
    }

    public string strMA_NHOM
    {
        get
        {
            return CNull.RowNVLString(pm_objDR, "MA_NHOM", IPConstants.c_DefaultString);
        }
        set
        {
            pm_objDR["MA_NHOM"] = value;
        }
    }

    public bool IsMA_NHOMNull()
    {
        return pm_objDR.IsNull("MA_NHOM");
    }

    public void SetMA_NHOMNull()
    {
        pm_objDR["MA_NHOM"] = System.Convert.DBNull;
    }

    public decimal dcID_TRANG_THAI
    {
        get
        {
            return CNull.RowNVLDecimal(pm_objDR, "ID_TRANG_THAI", IPConstants.c_DefaultDecimal);
        }
        set
        {
            pm_objDR["ID_TRANG_THAI"] = value;
        }
    }

    public bool IsID_TRANG_THAINull()
    {
        return pm_objDR.IsNull("ID_TRANG_THAI");
    }

    public void SetID_TRANG_THAINull()
    {
        pm_objDR["ID_TRANG_THAI"] = System.Convert.DBNull;
    }

    public DateTime datNGAY_LAP
    {
        get
        {
            return CNull.RowNVLDate(pm_objDR, "NGAY_LAP", IPConstants.c_DefaultDate);
        }
        set
        {
            pm_objDR["NGAY_LAP"] = value;
        }
    }

    public bool IsNGAY_LAPNull()
    {
        return pm_objDR.IsNull("NGAY_LAP");
    }

    public void SetNGAY_LAPNull()
    {
        pm_objDR["NGAY_LAP"] = System.Convert.DBNull;
    }

    public decimal dcID_THUOC
    {
        get
        {
            return CNull.RowNVLDecimal(pm_objDR, "ID_THUOC", IPConstants.c_DefaultDecimal);
        }
        set
        {
            pm_objDR["ID_THUOC"] = value;
        }
    }

    public bool IsID_THUOCNull()
    {
        return pm_objDR.IsNull("ID_THUOC");
    }

    public void SetID_THUOCNull()
    {
        pm_objDR["ID_THUOC"] = System.Convert.DBNull;
    }

    #endregion
    #region "Init Functions"
    public US_DM_DON_VI_TINH()
    {
        pm_objDS = new DS_DM_DON_VI_TINH();
        pm_strTableName = c_TableName;
        pm_objDR = pm_objDS.Tables[pm_strTableName].NewRow();
    }

    public US_DM_DON_VI_TINH(DataRow i_objDR)
        : this()
    {
        this.DataRow2Me(i_objDR);
    }

    public US_DM_DON_VI_TINH(decimal i_dbID)
    {
        pm_objDS = new DS_DM_DON_VI_TINH();
        pm_strTableName = c_TableName;
        IMakeSelectCmd v_objMkCmd = new CMakeAndSelectCmd(pm_objDS, c_TableName);
        v_objMkCmd.AddCondition("ID", i_dbID, eKieuDuLieu.KieuNumber, eKieuSoSanh.Bang);
        SqlCommand v_cmdSQL;
        v_cmdSQL = v_objMkCmd.getSelectCmd();
        this.FillDatasetByCommand(pm_objDS, v_cmdSQL);
        pm_objDR = getRowClone(pm_objDS.Tables[pm_strTableName].Rows[0]);
    }
    #endregion
	}
}
